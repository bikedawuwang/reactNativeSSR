type Query {
    get{{pascalCase moduleName}}(filters: {{pascalCase moduleName}}FindOptions!): [{{pascalCase moduleName}}]
    {{pascalCase moduleName}}(id: ID!): {{pascalCase moduleName}}
}

type Mutation {
    create{{pascalCase moduleName}}(## replace name here ##): {{pascalCase moduleName}}
    update{{pascalCase moduleName}}(
        id: ID!
        ## Autogenerated GraphQL Model Update Definition ##
    ): {{pascalCase moduleName}}
}

type Subscription {
    {{pascalCase moduleName}}Recieved: {{pascalCase moduleName}}
}

type {{pascalCase moduleName}} {
    id: Int
    ## Autogenerated GraphQL Model Definition ##
}

input {{pascalCase moduleName}}FindOptions {
    select: [String]
    relations: [String]
    where: InputProfile
    not: InputProfile
    in: InputProfile
    like: InputProfile
    any: InputProfile
    order: InputProfile
    skip: Int
    take: Int
    cache: Boolean
}

input Input{{pascalCase moduleName}} {
    id: Int
    ## Autogenerated GraphQL Model Definition ##
}